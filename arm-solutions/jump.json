{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the Administrator account of the new VMs. Default value is subscription id"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin user name for VM"
            }
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of VNET to place VM into"
            }
        },
        "vnetResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Name of Resource Group where VNET is present"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of subnet to place VM into"
            }
        },
        "vmSize": {
            "type": "string",
            "allowedValues": [
                "Standard_DS1_v2",
                "Standard_DS2_v2"
            ],
            "metadata": {
                "description": "Select VM size"
            }
        }
    },
    "variables": {
        "windowsOSVersion": "2016-Datacenter",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "objectsPrefix": "jump",
        "vmName": "[concat(variables('objectsPrefix'), '-vm')]",
        "nicName": "[concat(variables('objectsPrefix'), '-nic')]",
        "ipName": "[concat(variables('objectsPrefix'), '-ip')]",
        "subnetId": "[resourceId(parameters('vnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('ipName'))]"
            ],
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('ipName'))]"
                              }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('ipName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "apiVersion": "2017-12-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {}
}