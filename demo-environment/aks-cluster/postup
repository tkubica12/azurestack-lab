Source:
https://docs.microsoft.com/en-us/azure-stack/user/azure-stack-kubernetes-aks-engine-overview?view=azs-2002

1)	Check/set-up prerequisities
https://docs.microsoft.com/en-us/azure-stack/user/azure-stack-kubernetes-aks-engine-set-up?view=azs-2002
- ve strucnosti: 
	-	ver AzS min 1910
	-	Linux Custom Script Extensions
	-	AKS base Ubuntu Image
	-	Service Principal Identity
	-	Resource Group
	-	Private/Public Key pair

Service Principal (vytvoren v tenantu AzureStack PRG) - pres AzurePortal:
	Návod zde:
	https://docs.microsoft.com/en-us/azure-stack/operator/azure-stack-create-service-principals?view=azs-2002
	Jméno:		Azure Stack - AKS Cluster
	App (client) ID:		ce14531e-23e1-4eef-93a1-5be6c9cd8a38
	Tenant (directory) ID:	2e5ca8aa-bf51-471d-9604-802e7b39a642
	Object ID:				74045fd5-98dd-4916-b990-f9c74e53a11b
	Secret:
	Popis:	AKS Cluster SPN Secret
	Value:	viz azure portal, případně powershell (?)
	
	Přiřadit roli Contributor z AzS User portálu (subskripce Demo)
Vše z User portálu (Demo Subskripce)	
Vytvořit RG pro AKS Cluster:
Jméno:		k8s-cluster-rg

Zdroj:	https://docs.microsoft.com/en-us/azure-stack/user/azure-stack-kubernetes-aks-engine-deploy-linux?view=azs-2002
Vytvořit LinuxVM (klienta) - vytočeno z portálu, následně stažen template a param file
Jméno:			k8s-client-vm
Disk Type:		Premium SSD
User:			k8sadmin
Zabezpeceni:	SSH key
Public key:
---- BEGIN SSH2 PUBLIC KEY ----

---- END SSH2 PUBLIC KEY ----

PassPhrase:		$AKS-cluster-passPhrase (keyvault deployment-secrets)
Size:			DS2_v2
vNET:			k8s-cluster-rg-vnet
Public IP:		k8s-client-vm-ip
				62.168.63.170
Povolene porty:	22
Diagnostic Storage Account:		aksdiag

Připojit se přes SSH do VMka:
z terminálu:
curl -o get-akse.sh https://raw.githubusercontent.com/Azure/aks-engine/master/scripts/get-akse.sh
chmod 700 get-akse.sh
./get-akse.sh --version v0.51.0

ověření instalace:
aks-engine version

Při použití self-sign certifikátů je potřeba přidat root certifikát do trust storu:
sudo cp /var/lib/waagent/Certificates.pem /usr/local/share/ca-certificates/azurestackca.crt 
sudo update-ca-certificates

Dalši postup:
https://docs.microsoft.com/en-us/azure-stack/user/azure-stack-kubernetes-aks-engine-deploy-cluster?view=azs-2002

Příprava SSH klíče:
k8sadmin@k8s-client-vm:~$ ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/home/k8sadmin/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):		$AKS-cluster-passPhrase (keyvault deployment-secrets)
Enter same passphrase again:					$AKS-cluster-passPhrase (keyvault deployment-secrets)
Your identification has been saved in /home/k8sadmin/.ssh/id_rsa.
Your public key has been saved in /home/k8sadmin/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:BjALGvgKwp4rHPCckNx7abq4iak8e8xorOM+nqI5jXA k8sadmin@k8s-client-vm
The key's randomart image is:
+---[RSA 2048]----+

+----[SHA256]-----+

cat /home/k8sadmin/.ssh/id_rsa.pub
$AKS-cluster-private-key (keyvault deployment-secrets)

Bylo potřeba stáhnout poslední verzi AKS Ubuntu 16.04 image  Image Publisher: microsoft-aks, Offer: aks, SKU: aks-engine-ubuntu-1604-202005, Version: 2020.05.13

Úprava předpisu pro AKS cluster:
k8sadmin@k8s-client-vm:~$ nano ./kubernetes-azurestack.json


{
    "apiVersion": "vlabs",
    "location": "",
    "properties": {
        "orchestratorProfile": {
            "orchestratorType": "Kubernetes",
            "orchestratorRelease": "1.15",
            "orchestratorVersion": "1.15.12",
            "kubernetesConfig": {
                "cloudProviderBackoff": true,
                "cloudProviderBackoffRetries": 1,
                "cloudProviderBackoffDuration": 30,
                "cloudProviderRateLimit": true,
                "cloudProviderRateLimitQPS": 3,
                "cloudProviderRateLimitBucket": 10,
                "cloudProviderRateLimitQPSWrite": 3,
                "cloudProviderRateLimitBucketWrite": 10,
                "kubernetesImageBase": "mcr.microsoft.com/k8s/azurestack/core/",
                "useInstanceMetadata": false,
                "networkPlugin": "kubenet",
                "kubeletConfig": {
                    "--node-status-update-frequency": "1m"
                },
                "controllerManagerConfig": {
                    "--node-monitor-grace-period": "5m",
                    "--pod-eviction-timeout": "5m",
                    "--route-reconciliation-period": "1m"
                }
            }
        },
        "customCloudProfile": {
            "portalURL": "https://portal.prghub.hpedu.cz/",
            "identitySystem": "aad"
        },
        "featureFlags": {
            "enableTelemetry": true
        },
        "masterProfile": {
            "dnsPrefix": "k8s-master",
            "distro": "aks-ubuntu-16.04",
            "count": 3,
            "vmSize": "Standard_D2_v2"
        },
        "agentPoolProfiles": [
            {
                "name": "linuxpool",
                "count": 3,
                "vmSize": "Standard_D2_v2",
                "distro": "aks-ubuntu-16.04",
                "availabilityProfile": "AvailabilitySet",
                "AcceleratedNetworkingEnabled": false
            }
        ],
        "linuxProfile": {
            "adminUsername": "k8sadmin",
            "ssh": {
                "publicKeys": [
                    {
                        "keyData": $AKS-cluster-private-key
                    }
                ]
            }
        },
        "servicePrincipalProfile": {
            "clientId": "ce14531e-23e1-4eef-93a1-5be6c9cd8a38",
            "secret": $AKS-cluster-client-secret
        }
    }
}



Nasazeni clusteru:

aks-engine deploy \
--azure-env AzureStackCloud \
--location prghub \
--resource-group k8s-cluster-rg \
--api-model ./kubernetes-azurestack.json \
--output-directory kube-rg \
--client-id ce14531e-23e1-4eef-93a1-5be6c9cd8a38 \
--client-secret $AKS-cluster-client-secret \
--subscription-id $subscription-id

Po úspěšném nasazení clusteru:
Překonvertovat pomocí Putty nebo podobného nástroje klíč vygenerovaný pro aks-cluster do formátu pro připojení pomocí SSH 
/home/k8sadmin/.ssh/id_rsa

připojit se k jednomu z master nodů pšes SSH a ověřit funkčnost clusteru:
Name:	k8s-master-12241785-0
IP:		62.168.63.172
vytvořit sample deployment Redisu:
kubectl apply -f https://k8s.io/examples/application/guestbook/redis-master-deployment.yaml

ověřit funkčnost:
kubectl get pods

NAME                            READY   STATUS    RESTARTS   AGE
redis-master-545d695785-lwzhm   1/1     Running   0          2m26s

skouknout deployment logy:
kubectl logs -f <pod name>
kubectl logs -f redis-master-545d695785-lwzhm
